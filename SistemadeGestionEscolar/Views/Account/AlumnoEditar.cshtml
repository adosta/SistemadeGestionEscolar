<!-- #region VIEJO EDITAR -->

@*@model SistemadeGestionEscolar.Models.Alumno

@{
    ViewBag.Title = "AlumnoEditar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>AlumnoEditar</h2>
<form action="AlumnoEditar" method="post">

    @Html.HiddenFor(alumno => alumno.Id)
    @Html.HiddenFor(alumno => alumno.rol)
    @Html.HiddenFor(alumno => alumno.EmailConfirmed)
    @Html.HiddenFor(alumno => alumno.PhoneNumberConfirmed)
    @Html.HiddenFor(alumno => alumno.TwoFactorEnabled)
    @Html.HiddenFor(alumno => alumno.LockoutEnabled)
    @Html.HiddenFor(alumno => alumno.AccessFailedCount)
   
    
    

    <div class="row">
        <div class="form-group col-sm-6 ">
            @Html.LabelFor(alumno => alumno.Email, new { @class = "control-label" })
            <div>
                @Html.EditorFor(alumno => alumno.Email, new { htmlAttributes = new { required = "", @class = "form-control" } })
            </div>
            @Html.ValidationMessageFor(alumno => alumno.Email, "", new { @class = "error" })
        </div>

        <div class="form-group col-sm-6 ">
            @Html.LabelFor(alumno => alumno.UserName, new { @class = "control-label" })
            <div>
                @Html.EditorFor(alumno => alumno.UserName, new { htmlAttributes = new { required = "", @class = "form-control" } })
            </div>
            @Html.ValidationMessageFor(alumno => alumno.UserName, "", new { @class = "error" })
        </div>
    </div>
    

    <div class="row">
        <div class="form-group col-sm-6 ">
            @Html.LabelFor(alumno => alumno.nombre, new { @class = "control-label" })
            <div>
                @Html.EditorFor(alumno => alumno.nombre, new { htmlAttributes = new { required = "", @class = "form-control" } })
            </div>
            @Html.ValidationMessageFor(alumno => alumno.nombre, "", new { @class = "error" })
        </div>


        <div class="form-group col-sm-6 ">
            @Html.LabelFor(alumno => alumno.apellidoPaterno)

            @Html.EditorFor(alumno => alumno.apellidoPaterno, new { htmlAttributes = new { required = "", @class = "form-control" } })

            @Html.ValidationMessageFor(alumno => alumno.apellidoPaterno, "", new { @class = "error" })
        </div>
    </div>


    <div class="row">
        <div class="form-group col-sm-6">
            @Html.LabelFor(alumno => alumno.apellidoMaterno, new { @class = "control-label" })
            <div>
                @Html.EditorFor(alumno => alumno.apellidoMaterno, new { htmlAttributes = new { required = "", @class = "form-control" } })
            </div>
            @Html.ValidationMessageFor(alumno => alumno.apellidoMaterno, "", new { @class = "error" })
        </div>

        <div class="form-group col-sm-6">
            @Html.LabelFor(alumno => alumno.carreraPreferida, new { @class = "control-label" })
            <div>
                @Html.EditorFor(alumno => alumno.carreraPreferida, new { htmlAttributes = new { required = "", @class = "form-control" } })
            </div>
            @Html.ValidationMessageFor(alumno => alumno.carreraPreferida, "", new { @class = "error" })
        </div>

        <div>
            
        </div>
    </div>

    <div class="row">
        <div class="form-group col-sm-12">

            @Html.LabelFor(alumno => alumno.grupo.nombreGrupo, new { @class = "control-label" })

            <div>

                @Html.DropDownList("grupoID", null, new { @class = "form-control" })

            </div>
        </div>
    </div>

    <div class="form-group col-sm-12">

        <button class="btn btn-primary" type="submit" value="Editar">Editar</button>
        <p class="error"> @ViewBag.MensajeError </p>

    </div>
  
</form>*@
<!-- #endregion -->

@model SistemadeGestionEscolar.Models.Alumno

@{
    ViewBag.Title = "AlumnoEditar";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>EDITAR ALUMNO</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.apellidoPaterno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.apellidoPaterno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.apellidoPaterno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.apellidoMaterno, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.apellidoMaterno, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.apellidoMaterno, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.fechaDeNacimiento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.fechaDeNacimiento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.fechaDeNacimiento, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.rol, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.rol, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.rol, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.EmailConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.EmailConfirmed)
                    @Html.ValidationMessageFor(model => model.EmailConfirmed, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.SecurityStamp, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SecurityStamp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SecurityStamp, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.PhoneNumberConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.PhoneNumberConfirmed)
                    @Html.ValidationMessageFor(model => model.PhoneNumberConfirmed, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.TwoFactorEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.TwoFactorEnabled)
                    @Html.ValidationMessageFor(model => model.TwoFactorEnabled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.LockoutEndDateUtc, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LockoutEndDateUtc, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LockoutEndDateUtc, "", new { @class = "text-danger" })
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.LockoutEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.LockoutEnabled)
                    @Html.ValidationMessageFor(model => model.LockoutEnabled, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>*@

        @*<div class="form-group">
            @Html.LabelFor(model => model.AccessFailedCount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AccessFailedCount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AccessFailedCount, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

       
        

        <div class="form-group">
            @Html.LabelFor(model => model.grupoID, "grupoID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("grupoID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.grupoID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>